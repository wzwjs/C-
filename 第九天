//由于上一段时间找工作耽误了几天，其实，这个学习的过程我感觉就跟跑马拉松一样，一天学的太多就像刚跑的时候，一下子配速就拉满，虽然这短时间看起来很快，但是，是很难坚持长时间的。应该慢慢的，找到适合自己的配速。先慢慢跑
//将跑量上来之后，每一个礼拜去使用一天去跑间歇，去提升速度。
//在平时跑的时候，稍微跑的让自己有一点吃力就行。
//每一个礼拜跑一个长距离。                   

//keep上有几话让我记住了 ，       
                        并不是每一次都把自己跑的筋疲力尽才会提高成绩，速度。
                        跑的慢，不一定会输，在每一次跑的时候，找到自己的稍微吃力的配速即可。
                                

//这里的跑步可以换成为生活中的任何需要长期去做的事情   比如像学习·C++这枯燥无味的语言，但是学多了，就会慢慢喜欢他，突然间隔，几天不学习，还有一点不习惯。




//今天C++的学习知识点记录
                          第一：什么是构造函数，什么是析构函数，以及他们的作用和写法
                          第二：构造函数的分类及调用
                          第三：拷贝构造函数调用时间
                          第四：构造函数调用规则


//第一：什么是构造函数，什么是析构函数，以及他们的作用和写法
        什么是：构造函数就是类的属性的值在初始化的操作，析构函数就是类实例化的对象在结束的时候，回收的操作

        作用：让使用者去对类的初始化和类实例化的对象结束时的操作

        写法：
              构造函数：类名（）{}
              1，构造函数，没有返回值，也不需要写void
              2,函数名称可以与类名相同
              3，构造函数可以有参数
              4，程序在调用对象的时候会自动调用构造函数，无需手动调用，而且只会调用一次

              析构函数：~类名（）{}
              1，析构函数，没有返回值，也不用写void
              2,函数名称可以与类名相同，在名称前加上符号~
              3，析构函数不可以有参数，因此在调用的时候不可以发生重载
              4，程序在对象销毁前会自动调用析构函数，无需手动调用，而且只会调用一次

//第二：构造函数的分类及其调用

        //分类：
              // 按照参数分：有参构造和无参构造
              // 按照类型分：普通构造和拷贝构造

        //三种调用方式：
              //  括号法
              //  显示法
              //隐式转换法

//第三：拷贝函数的调用时间

      //第一，使用一个已经创建完毕的对象来初始化一个新的对象
      //第二，值传递的方式给函数参数传值
      //第三，以值方式返回局部对象

//第四：构造函数的调用规则

      // 默认情况下，C++编译器至少给一个类添加3个函数
      //1,默认构造函数（无参，函数体为空）
      //2,默认析构函数（无参，函数体为空）
      //3,默认拷贝函数，对属性进行值拷贝

      //在三种函数如果只创建了低级的函数，会自动创建高级的函数，如果只创建了高级的函数，就不会创建低级函数
      //在该规则中，可以按照序号1，2，3的大小来划分那一个函数的等级高（这里只针对于当前的这一段话的理解，其作用范围就只有本段话，属于局部作用，不是全局作用）


                          
