//这个本来是昨天就要写的，但是身体的懒惰，今天补上。

//今天学习了文件的操作，在程序中，我们制作了一些内容，我们一退出程序，整个程序（包括程序中我们制作的内容就会从内存中释放出去）。
//为了我们能一直看到我们制作的文件。在程序释放之前，就我们制作好的内容从内存中保存到硬盘里就行

//文件分为两种形式-以--ASCII码存储的文本文件和以二进制码存储的二进制文件

//文件的操作大致也分为两种形式---读或写

//文件的读
      //文本文件的读
            //第一步：包括ifstream(input_file_stream)或者fstream(file_stream)这个C++已经封装好的类，即引入头文件
            //第二步，根据引用的这个头文件，对这个类进行一个实例化对象（读文件的对象）
            //第三步，再调用这个对象的类上已经封装好的成员函数open("File_Path",Open_File_Mode)去对应的位置去以对应的权限去读取文件的内容，为了程序的健全性，建议在调用open函数之前，先判断一下该文件是否存在
            //第四步，自己定义一个存储空间去接收读取的内容（例如，自定义一个数组）
            //第五步，调用对象类上的close函数去关闭

    //二进制文件的读
           二进制文件的读跟文本文件的读，大致一样，只是有两点区分，
          //第一，读的方式不一样，二进制文件的读，是使用read(内存中一段连续的空间，文件的大小（字节))
          //第二，打开时的Open_File_Mode要加ios::binary

//文件的写

      //文本文件的写
            //第一步，包括ofstream(output_file_stream)或者fstream(file_stream)这个类，即引入头文件
            //第二步，根据引用的这个头文件，对这个类进行一个实例化对象（读文件的对象），创建流对象
            //第三步，通过调用这个对象的类上的成员函数open("File_Path",Open_File_Mode)去对应的位置去以对应的权限去创建一个文件，
            //第四步，通过     实例化的对象<<"输入的内容";    去向文件中输入相输入的内容
            //第五步，关闭文件

       //二进制文件的写
           二进制文件的写跟文本文件的写，大致一样，只是有两点区分，
          //第一，写的方式不一样，二进制文件的写，是使用write(写入文件的地址，文件的大小（字节))
          //第二，创建二进制文件的时候要加ios::binary
