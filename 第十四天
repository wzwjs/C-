//今天学习了多继承和菱形继承，
    //多继承
        //多继承就是子类同时继承多个父类，但是在C++中不提倡
        //语法:class 子类名:继承权限 父类名,继承权限 父类名
        //在子类中继承了两个不同父类中的同名属性或者方法时，要在引用的时候加不同的作用域，以便编译器区分开来

    //菱形继承
        子类继承了带有相同属性的父类，对于相同的属性和方法，会造成存储空间，内存资源的浪费。故使用虚函数 virtual 
          语法:
              爷爷类P{}
              父类A{}
              父类B{}
              父类A: virtual 继承权限P{};
              父类B: virtual 继承权限P{};
              子类C:继承权限 A，继承权限 B{}；
              此时，针对于相同继承的属性与方法就不会重复了，避免了二义性的问题，同时也解决了菱形继承和钻石继承的问题
